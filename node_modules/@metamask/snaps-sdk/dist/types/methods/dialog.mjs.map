{"version":3,"file":"dialog.mjs","sourceRoot":"","sources":["../../../src/types/methods/dialog.ts"],"names":[],"mappings":"AAKA;;;;;;;GAOG;AACH,MAAM,CAAN,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,6BAAe,CAAA;IACf,2CAA6B,CAAA;IAC7B,+BAAiB,CAAA;AACnB,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB","sourcesContent":["import type { Json } from '@metamask/utils';\n\nimport type { ComponentOrElement } from '..';\nimport type { EnumToUnion } from '../../internals';\n\n/**\n * The type of dialog to display.\n *\n * - `alert` - A dialog with a single button.\n * - `confirmation` - A dialog with two buttons, one to confirm and one to\n * cancel.\n * - `prompt` - A dialog with two buttons and a text input.\n */\nexport enum DialogType {\n  Alert = 'alert',\n  Confirmation = 'confirmation',\n  Prompt = 'prompt',\n}\n\nexport type DefaultDialog =\n  | {\n      id: string;\n    }\n  | { content: ComponentOrElement };\n\n/**\n * An alert dialog.\n *\n * @property type - The type of dialog. Must be `alert`.\n * @property content - The content to display in the dialog.\n * @property id - The Snap interface ID.\n */\nexport type AlertDialog =\n  | {\n      type: EnumToUnion<DialogType.Alert>;\n      content: ComponentOrElement;\n    }\n  | {\n      type: EnumToUnion<DialogType.Alert>;\n      id: string;\n    };\n\n/**\n * A confirmation dialog.\n *\n * @property type - The type of dialog. Must be `confirmation`.\n * @property content - The content to display in the dialog.\n * @property id - The Snap interface ID.\n */\nexport type ConfirmationDialog =\n  | {\n      type: EnumToUnion<DialogType.Confirmation>;\n      content: ComponentOrElement;\n    }\n  | {\n      type: EnumToUnion<DialogType.Confirmation>;\n      id: string;\n    };\n\n/**\n * A prompt dialog.\n *\n * @property type - The type of dialog. Must be `prompt`.\n * @property content - The content to display in the dialog.\n * @property id - The Snap interface ID.\n * @property placeholder - An optional placeholder text to display in the text\n * input.\n */\nexport type PromptDialog =\n  | {\n      type: EnumToUnion<DialogType.Prompt>;\n      content: ComponentOrElement;\n      placeholder?: string;\n    }\n  | {\n      type: EnumToUnion<DialogType.Prompt>;\n      id: string;\n      placeholder?: string;\n    };\n\n/**\n * The request parameters for the `snap_dialog` method.\n *\n * @property type - The type of dialog to display.\n * @property content - The content to display in the dialog.\n * @property id - The Snap interface ID.\n * @property placeholder - The placeholder text to display in the dialog. Only\n * applicable for the `prompt` dialog.\n */\nexport type DialogParams =\n  | AlertDialog\n  | ConfirmationDialog\n  | PromptDialog\n  | DefaultDialog;\n\n/**\n * The result returned by the `snap_dialog` method.\n *\n * - If the dialog is an `alert`, the result is `null`.\n * - If the dialog is a `confirmation`, the result is a boolean indicating\n * whether the user confirmed the dialog.\n * - If the dialog is a `prompt`, the result is the value entered by\n * the user.\n */\nexport type DialogResult = null | boolean | string | Json;\n"]}