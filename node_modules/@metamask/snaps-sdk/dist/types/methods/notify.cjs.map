{"version":3,"file":"notify.cjs","sourceRoot":"","sources":["../../../src/types/methods/notify.ts"],"names":[],"mappings":";;;AAiBA;;;;;GAKG;AACH,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC1B,mCAAe,CAAA;IACf,qCAAiB,CAAA;AACnB,CAAC,EAHW,gBAAgB,gCAAhB,gBAAgB,QAG3B","sourcesContent":["import { type EnumToUnion } from '../../internals';\nimport type {\n  AddressElement,\n  BoldElement,\n  BoxElement,\n  CopyableElement,\n  DividerElement,\n  IconElement,\n  ImageElement,\n  ItalicElement,\n  LinkElement,\n  RowElement,\n  TextElement,\n  TooltipElement,\n  ValueElement,\n} from '../../jsx';\n\n/**\n * The types of notifications that can be displayed.\n *\n * - `InApp` - A notification that is displayed in by the MetaMask extension.\n * - `Native` - A notification that is displayed by the operating system.\n */\nexport enum NotificationType {\n  InApp = 'inApp',\n  Native = 'native',\n}\n\n/**\n * The request parameters for the `snap_notify` method.\n *\n * @property type - The type of notification to display.\n * @property message - The message to display in the notification.\n */\nexport type NotifyParams =\n  | {\n      type: EnumToUnion<NotificationType.Native>;\n      message: string;\n    }\n  | {\n      type: EnumToUnion<NotificationType.InApp>;\n      message: string;\n    }\n  | {\n      type: EnumToUnion<NotificationType.InApp>;\n      message: string;\n      content: NotificationComponent;\n      title: string;\n    }\n  | {\n      type: EnumToUnion<NotificationType.InApp>;\n      message: string;\n      content: NotificationComponent;\n      title: string;\n      footerLink: { href: string; text: string };\n    };\n\n/**\n * The result returned by the `snap_notify` method.\n *\n * This method does not return anything.\n */\nexport type NotifyResult = null;\n\nexport type NotificationComponent =\n  | BoxElement\n  | CopyableElement\n  | BoldElement\n  | ItalicElement\n  | AddressElement\n  | DividerElement\n  | ValueElement\n  | RowElement\n  | TextElement\n  | TooltipElement\n  | IconElement\n  | ImageElement\n  | LinkElement;\n"]}